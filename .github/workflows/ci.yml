name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    name: Lint Python code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('app/requirements.txt') }}
      - run: pip install flake8
      - run: flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics

  security-scan:
    name: Security scan (Bandit + Safety)
    runs-on: ubuntu-latest
    needs: lint
    # <-- Use a single-line expression here:
    if: ${{ 
      contains(github.event.head_commit.message, 'app/') ||
      contains(github.event.head_commit.added, '.py') 
    }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-security-${{ hashFiles('app/requirements.txt') }}
      - run: pip install bandit safety
      - run: bandit -r app/ -c pyproject.toml || true
      - run: safety check -r app/requirements.txt || true

  test:
    name: Run tests with coverage
    runs-on: ubuntu-latest
    needs: [lint, security-scan]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-test-${{ hashFiles('app/requirements.txt') }}
      - run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt pytest pytest-cov pytest-xdist
      - run: pytest app/tests/ -n auto --cov=app --cov-report=xml
      - uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  docker-build:
    name: Build Docker image with cache
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v2
      - uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/build-push-action@v4
        with:
          context: .
          builder: buildx
          tags: demo-app:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  trivy-scan:
    name: Container vulnerability scan
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'demo-app:latest'
          format: 'table'
          exit-code: '0'
          severity: 'CRITICAL,HIGH'
